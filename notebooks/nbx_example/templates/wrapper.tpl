#AUTOGENERATED!

import argparse
import os
import sys
from nbx.fileio import load, dump
from nbx.confspace import ConfSpace
from pathlib import Path
from {{module}} import load_confspace, run_experiment


confspace,testconfs = load_confspace("{{confspace}}")


def print_args(arg_dict):
	print(f"**nbx**\nCalling experiment with args:...")
	for k,v in arg_dict.items():
		print(f"\t{k}: {v}")



def main(task_id, results_dir):
	t     = task_id - 1
	rdir = Path(results_dir)
	xdir  = rdir/f"{t}"

	if not os.path.exists(xdir):
		os.makedirs(xdir)

	if t >= 0: xargs = confspace[t]
	else:      xargs = testconfs[0]

	xargs.update({
		"xtask": task_id, 
		"xdir" : xdir
	})

	if t >= 0: print(f"Running experiment #{task_id} of {len(confspace)}...")
	else: print(f"Running default experiment test ...")

	stdout, stderr = sys.stdout, sys.stderr
	f = open(xdir/'out.txt', 'w')
	sys.stdout, sys.stderr = f, f
	# ----- RUN EXP------
	try:
		result = run_experiment(**xargs)
		with open(rdir/'finished.txt', 'a') as file: file.write(f"{t}\n")
	except:
		with open(rdir/'aborted.txt', 'a') as file: file.write(f"{t}\n")
	# ----------------
	f.close()
	sys.stdout, sys.stderr = stdout, stderr



def parse_args():
	main_parser = argparse.ArgumentParser(description='NBX wrapper...')
	subparsers  = main_parser.add_subparsers(help='sub-command help', dest='subparser_name')
	info_parser = subparsers.add_parser('info', help = "Returns the number of experiment configurations")
	action_parser = subparsers.add_parser('run', help = "Runs the experiment for a given index")
	# Action arguments ...
	action_parser.add_argument('-i', '--index', dest="index", default=None, type=int,  
	                           help = "Index into unfolded config space (ZERO-BASED!!)")
	action_parser.add_argument('-t', '--task', dest="task_id", default=0, type=int,  
	                           help = "Index into unfolded config space (ONE-BASED!!)")
	action_parser.add_argument('--dir', dest="results_dir", default=Path(__file__).parent/'results', type=str,
	                           help = "Folder the experiment results will be saved to. Task subfolder will be added automatically.")

	return main_parser.parse_args()


if __name__ == '__main__':
	args = parse_args()

	if args.subparser_name == "info":
		T = len(confspace)
		print(T)

	elif args.subparser_name == "run":
		if args.index is not None: task = args.index + 1
		else: task = args.task_id
		main(task, args.results_dir)